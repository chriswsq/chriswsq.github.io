<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://chriswsq.github.io</id>
    <title>chris&apos;wang</title>
    <updated>2021-04-23T07:29:14.311Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://chriswsq.github.io"/>
    <link rel="self" href="https://chriswsq.github.io/atom.xml"/>
    <subtitle>当你觉得无所事事时，那你就是在虚度光阴</subtitle>
    <logo>https://chriswsq.github.io/images/avatar.png</logo>
    <icon>https://chriswsq.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, chris&apos;wang</rights>
    <entry>
        <title type="html"><![CDATA[如何解决docker安装zabbix5.0界面乱码？]]></title>
        <id>https://chriswsq.github.io/post/ru-he-jie-jue-docker-an-zhuang-zabbix50-jie-mian-luan-ma/</id>
        <link href="https://chriswsq.github.io/post/ru-he-jie-jue-docker-an-zhuang-zabbix50-jie-mian-luan-ma/">
        </link>
        <updated>2021-04-23T02:04:18.000Z</updated>
        <content type="html"><![CDATA[<p>zabbix图形界面乱码如下：<br>
<img src="https://chriswsq.github.io/post-images/1619143542413.png" alt="" loading="lazy"></p>
<p>解决：</p>
<p>docker部署zabbix-web和源码安装zabbix-web一样，字体都是存储在/usr/share/zabbix/assets/fonts/</p>
<p>1、从windown拷贝simkai.ttf(楷体)文件到docker的zabbix-web里面</p>
<pre><code class="language-bash">1、字体存在于Windows的路径C:\Windows\Fonts
2、拷贝到服务器
3、拷贝字体到docker 容器内部# docker cp ./simkai.ttf zabbix-web:/usr/share/zabbix/assets/fonts/
4、进入容器#docker exec -it zabbix-web bash
5、备份以前的字体文件# mv /usr/share/zabbix/assets/fonts/DejaVuSans.ttf /usr/share/zabbix/assets/fonts/DejaVuSans.ttf_bak
6、链接# ln -s /usr/share/zabbix/assets/fonts/simkai.ttf /usr/share/zabbix/assets/fonts/DejaVuSans.ttf
</code></pre>
<p>然后刷新界面，就可以正常显示了。</p>
<p>如果是使用的 镜像 zabbix-web-apache-mysql ，和 镜像 zabbix-web-nginx-mysql 的操作一致。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Docker中iptables规则在iptables重启后丢失的完整过程]]></title>
        <id>https://chriswsq.github.io/post/docker-zhong-iptables-gui-ze-zai-iptables-chong-qi-hou-diu-shi-de-wan-zheng-guo-cheng/</id>
        <link href="https://chriswsq.github.io/post/docker-zhong-iptables-gui-ze-zai-iptables-chong-qi-hou-diu-shi-de-wan-zheng-guo-cheng/">
        </link>
        <updated>2021-04-21T03:26:44.000Z</updated>
        <content type="html"><![CDATA[<p>知识点</p>
<p>1、netfilter与iptables的关系</p>
<p>Netfilter是在Linux内核中的一个防火墙框架，用于管理网络数据包，不仅具有网络地址转换（NAT）的功能，也具有数据包内容修改，以及数据包过滤等防火墙功能。利用在用户空间的应用软件iptables等来控制Netfilter（iptables只是应用软件，工具）。<br>
<img src="https://chriswsq.github.io/post-images/1618975661208.png" alt="" loading="lazy"></p>
<p>2、iptables与firewalld的关系</p>
<p>firewalld和iptables一样都是应用软件，是工具，但是他的底层还是先通过iptables。<br>
<img src="https://chriswsq.github.io/post-images/1618975680713.png" alt="" loading="lazy"></p>
<p>3、docker与firewalld、iptables的关系</p>
<p>1）docker安装完成后，会自动接管iptables或者firewalld，在docker run的时候，会自动往iptables里加入规则；所以当iptables重启后会丢失，只有再重启docker就好了的原因。</p>
<p>2）当使用Systemd 的时候， firewalld 会在 Docker 之前启动，但是如果你在 Docker 启动之后再启动 或者重启 firewalld ，就需要重启 Docker 进程了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[shell编程交互 脚本菜单]]></title>
        <id>https://chriswsq.github.io/post/shell-bian-cheng-jiao-hu-jiao-ben-cai-dan/</id>
        <link href="https://chriswsq.github.io/post/shell-bian-cheng-jiao-hu-jiao-ben-cai-dan/">
        </link>
        <updated>2021-04-07T08:08:21.000Z</updated>
        <content type="html"><![CDATA[<p>这篇文章介绍一下Bash中的环境变量PS3。</p>
<h2 id="ps3-是什么">PS3 是什么</h2>
<p>PS3 是Prompt String 3的缩写，它是Linux/Unix下的一个用于控制select命令创建的菜单提示信息的环境变量。</p>
<h2 id="select使用介绍">select使用介绍</h2>
<p>关于select的使用介绍可以参看：</p>
<p>https://liumiaocn.blog.csdn.net/article/details/104112272<br>
————————————————</p>
<h2 id="示例代码">示例代码</h2>
<p>本文使用如下示例代码对PS3的使用进行说明：</p>
<pre><code class="language-bash"> cat test-ps3.sh 
#!/bin/sh

IFS_OLD=$IFS
IFS=/
MENU_ITEMS=(&quot;Start Kubernetes&quot;/&quot;Stop Kubernetes&quot;/&quot;Restart Kubernetes&quot;/&quot;Status Kubernetes&quot;)
echo &quot;[PS3]: $PS3&quot;
select MENU_ITEM in ${MENU_ITEMS[@]}
do
    echo &quot;Menu Item Selected: $MENU_ITEM&quot;
    break
done
IFS=$IFS_OLD
</code></pre>
<p>代码说明：功能非常简单，模拟显示一下Kubernetes启动、停止、重启以及状态显示的菜单生成。</p>
<h2 id="ps3未设定下的select菜单提示">PS3未设定下的select菜单提示</h2>
<p>PS3缺省没有设定时，select菜单等待用户输入的时候会提示#?，比如本文示例代码在PS3未设定时（缺省状态）的设定下执行结果如下所示</p>
<pre><code class="language-bash">sh test-ps3.sh 
[PS3]: 
1) Start Kubernetes    3) Restart Kubernetes
2) Stop Kubernetes     4) Status Kubernetes
#? 4
Menu Item Selected: Status Kubernetes

</code></pre>
<p>设定PS3修改select菜单提示信息<br>
通过修改PS3可以间接修改select菜单的提示信息，比如我们通过export修改此环境变量的值，然后执行确认结果如下：</p>
<pre><code class="language-bash">export PS3=&quot;Please input your choice: &gt;&quot;
 sh test-ps3.sh 
[PS3]: Please input your choice: &gt;
1) Start Kubernetes    3) Restart Kubernetes
2) Stop Kubernetes     4) Status Kubernetes
Please input your choice: &gt;3
Menu Item Selected: Restart Kubernetes

</code></pre>
<p>也可将PS3 变量定义到脚本文件之中<br>
可以看到PS3的内容替代了缺省的#? ，修改了默认显示的信息，这也是PS3环境变量引入的重要原因。</p>
<p>注意：本文示例代码中使用export环境变量的方式，是为了不修改示例代码进行PS3的使用说明，在实际的使用中直接修改之后使用即可发生变化。</p>
<p>原文链接：https://blog.csdn.net/liumiaocn/article/details/104112574</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[shell脚本----if（数字条件，字符串条件，字符串为空）]]></title>
        <id>https://chriswsq.github.io/post/shell-jiao-ben-ifshu-zi-tiao-jian-zi-fu-chuan-tiao-jian-zi-fu-chuan-wei-kong/</id>
        <link href="https://chriswsq.github.io/post/shell-jiao-ben-ifshu-zi-tiao-jian-zi-fu-chuan-tiao-jian-zi-fu-chuan-wei-kong/">
        </link>
        <updated>2021-03-24T04:19:14.000Z</updated>
        <content type="html"><![CDATA[<p>二元比较操作符,比较变量或者比较数字.</p>
<p>注意数字与字符串的区别.</p>
<p>1.整数比较</p>
<p>-eq 等于,如:if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>−</mo><mi>e</mi><mi>q</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; -eq &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord">&quot;</span></span></span></span>b&quot; ]<br>
-ne 不等于,如:if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>−</mo><mi>n</mi><mi>e</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; -ne &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord">&quot;</span></span></span></span>b&quot; ]<br>
-gt 大于,如:if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>−</mo><mi>g</mi><mi>t</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; -gt &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">t</span><span class="mord">&quot;</span></span></span></span>b&quot; ]<br>
-ge 大于等于,如:if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>−</mo><mi>g</mi><mi>e</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; -ge &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">e</span><span class="mord">&quot;</span></span></span></span>b&quot; ]<br>
-lt 小于,如:if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>−</mo><mi>l</mi><mi>t</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; -lt &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">t</span><span class="mord">&quot;</span></span></span></span>b&quot; ]<br>
-le 小于等于,如:if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>−</mo><mi>l</mi><mi>e</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; -le &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord">&quot;</span></span></span></span>b&quot; ]<br>
&lt;   小于(需要双括号),如:((&quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>&lt;</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; &lt; &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>b&quot;))<br>
&lt;=  小于等于(需要双括号),如:((&quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>&lt;</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; &lt;= &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>b&quot;))</p>
<blockquote>
<p>大于(需要双括号),如:((&quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>&gt;</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; &gt; &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>b&quot;))<br>
=  大于等于(需要双括号),如:((&quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>&gt;</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; &gt;= &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>b&quot;))</p>
</blockquote>
<p>小数据比较可使用AWK</p>
<p>2.字符串比较</p>
<p>= 等于,如:if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; = &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>b&quot; ]<br>
== 等于,如:if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>=</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; == &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>b&quot; ],与=等价</p>
<p>注意：<br>
<img src="https://chriswsq.github.io/post-images/1616559660703.png" alt="" loading="lazy"></p>
<p>比较两个字符串是否相等的办法是：<br>
if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi><mi mathvariant="normal">&quot;</mi><mi>x</mi><mo>=</mo><mi mathvariant="normal">&quot;</mi><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi><mi mathvariant="normal">&quot;</mi><mi>x</mi><mo>]</mo><mo separator="true">;</mo><mi>t</mi><mi>h</mi><mi>e</mi><mi>n</mi><mi mathvariant="normal">这</mi><mi mathvariant="normal">里</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">关</mi><mi mathvariant="normal">键</mi><mi mathvariant="normal">有</mi><mi mathvariant="normal">几</mi><mi mathvariant="normal">点</mi><mi mathvariant="normal">：</mi><mn>1</mn><mi mathvariant="normal">使</mi><mi mathvariant="normal">用</mi><mi mathvariant="normal">单</mi><mi mathvariant="normal">个</mi><mi mathvariant="normal">等</mi><mi mathvariant="normal">号</mi><mn>2</mn><mi mathvariant="normal">注</mi><mi mathvariant="normal">意</mi><mi mathvariant="normal">到</mi><mi mathvariant="normal">等</mi><mi mathvariant="normal">号</mi><mi mathvariant="normal">两</mi><mi mathvariant="normal">边</mi><mi mathvariant="normal">各</mi><mi mathvariant="normal">有</mi><mi mathvariant="normal">一</mi><mi mathvariant="normal">个</mi><mi mathvariant="normal">空</mi><mi mathvariant="normal">格</mi><mi mathvariant="normal">：</mi><mi mathvariant="normal">这</mi><mi mathvariant="normal">是</mi><mi>u</mi><mi>n</mi><mi>i</mi><mi>x</mi><mi>s</mi><mi>h</mi><mi>e</mi><mi>l</mi><mi>l</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">要</mi><mi mathvariant="normal">求</mi><mn>3</mn><mi mathvariant="normal">注</mi><mi mathvariant="normal">意</mi><mi mathvariant="normal">到</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">test&quot;x = &quot;test&quot;x ]; then
这里的关键有几点：
1 使用单个等号
2 注意到等号两边各有一个空格：这是unix shell的要求
3 注意到&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord">&quot;</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">&quot;</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord">&quot;</span><span class="mord mathdefault">x</span><span class="mclose">]</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">里</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">关</span><span class="mord cjk_fallback">键</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">几</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">：</span><span class="mord">1</span><span class="mord cjk_fallback">使</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">等</span><span class="mord cjk_fallback">号</span><span class="mord">2</span><span class="mord cjk_fallback">注</span><span class="mord cjk_fallback">意</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">等</span><span class="mord cjk_fallback">号</span><span class="mord cjk_fallback">两</span><span class="mord cjk_fallback">边</span><span class="mord cjk_fallback">各</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">空</span><span class="mord cjk_fallback">格</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">是</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">i</span><span class="mord mathdefault">x</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">要</span><span class="mord cjk_fallback">求</span><span class="mord">3</span><span class="mord cjk_fallback">注</span><span class="mord cjk_fallback">意</span><span class="mord cjk_fallback">到</span><span class="mord">&quot;</span></span></span></span>test&quot;x最后的x，这是特意安排的，因为当$test为空的时候，上面的表达式就变成了x = testx，显然是不相等的。而如果没有这个x，表达式就会报错：[: =: unary operator expected</p>
<p>注意:==的功能在[[]]和[]中的行为是不同的,如下:<br>
[[ <span class='katex-error' title='ParseError: KaTeX parse error: Expected &#039;EOF&#039;, got &#039;#&#039; at position 14: a == z* ]]   #̲ 如果'>a == z* ]]   # 如果</span>a以&quot;z&quot;开头(模式匹配)那么将为true<br>
[[ <span class='katex-error' title='ParseError: KaTeX parse error: Expected &#039;EOF&#039;, got &#039;#&#039; at position 14: a == &quot;z*&quot; ]] #̲ 如果'>a == &quot;z*&quot; ]] # 如果</span>a等于z*(字符匹配),那么结果为true</p>
<p>[ <span class='katex-error' title='ParseError: KaTeX parse error: Expected &#039;EOF&#039;, got &#039;#&#039; at position 15: a == z* ]     #̲ File globbing …'>a == z* ]     # File globbing 和word splitting将会发生 
 [ &quot;</span>a&quot; == &quot;z*&quot; ] # 如果$a等于z*(字符匹配),那么结果为true</p>
<p>一点解释,关于File globbing是一种关于文件的速记法,比如&quot;*.c&quot;就是,再如~也是.<br>
但是file globbing并不是严格的正则表达式,虽然绝大多数情况下结构比较像.<br>
!= 不等于,如:if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>!</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; != &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>b&quot; ]<br>
这个操作符将在[[]]结构中使用模式匹配.<br>
&lt; 小于,在ASCII字母顺序下.如:<br>
if [[ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>&lt;</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; &lt; &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>b&quot; ]]<br>
if [ &quot;<span class='katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \&lt; at position 4: a&quot; \̲&lt;̲ &quot;'>a&quot; \&lt; &quot;</span>b&quot; ]<br>
注意:在[]结构中&quot;&lt;&quot;需要被转义.</p>
<blockquote>
<p>大于,在ASCII字母顺序下.如:<br>
if [[ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>&gt;</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; &gt; &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>b&quot; ]]<br>
if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mtext> </mtext><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; \&gt; &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">&quot;</span></span></span></span>b&quot; ]<br>
注意:在[]结构中&quot;&gt;&quot;需要被转义.<br>
具体参考Example 26-11来查看这个操作符应用的例子.<br>
-z 字符串为&quot;null&quot;.就是长度为0.<br>
-n 字符串不为&quot;null&quot;<br>
注意:<br>
使用-n在[]结构中测试必须要用&quot;&quot;把变量引起来.使用一个未被&quot;&quot;的字符串来使用! -z<br>
或者就是未用&quot;&quot;引用的字符串本身,放到[]结构中。虽然一般情况下可<br>
以工作,但这是不安全的.习惯于使用&quot;&quot;来测试字符串是一种好习惯.</p>
</blockquote>
<p>举例：</p>
<p>1.数字比较</p>
<p>#!/bin/bash</p>
<p>i=6<br>
a=10</p>
<p>if [ $a -eq 10 ]<br>
then<br>
echo &quot;a = 10&quot;<br>
fi</p>
<p>if [ $a -ne $i ]<br>
then<br>
echo &quot;a != $i&quot;<br>
fi</p>
<p>if [ $a -gt $i ]<br>
then<br>
echo &quot;a &gt; i&quot;<br>
fi</p>
<p>if [ $a -lt $i ]<br>
then<br>
echo &quot;a &lt; i&quot;<br>
else<br>
echo &quot;a &gt; i&quot;<br>
fi</p>
<p>if((&quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>&gt;</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; &gt; &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>i&quot;))<br>
then<br>
echo &quot;(())a&gt;i&quot;<br>
fi</p>
<p>if(($a != $i))<br>
then<br>
echo &quot;(())a!=i&quot;<br>
fi</p>
<p>备注：通过sh运行脚本，[ ]运算是可以的，而（（））运行出错<br>
chmod 777 后，直接./ 运行，都可以</p>
<p>2.字符串比较</p>
<p>#!/bin/bash</p>
<p>a=&quot;123&quot;<br>
b=&quot;1234&quot;<br>
c=&quot;123&quot;</p>
<p>if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mi>x</mi><mo>!</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot;x != &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mord mathdefault">x</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>b&quot;x ]<br>
then<br>
echo &quot;a != b&quot;<br>
fi</p>
<p>if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mi>x</mi><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot;x = &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>c&quot;x ]<br>
then<br>
echo &quot;a == c&quot;<br>
fi</p>
<p>判断字符串为空</p>
<p>if [ -z &quot;$d&quot; ]<br>
then<br>
echo &quot;d is empty&quot;<br>
fi</p>
<p>备注：</p>
<p>-e                          文件存在<br>
-a                          文件存在（已被弃用）<br>
-f                          被测文件是一个regular文件（正常文件，非目录或设备）<br>
-s                          文件长度不为0<br>
-d                          被测对象是目录<br>
-b                          被测对象是块设备<br>
-c                          被测对象是字符设备<br>
-p                          被测对象是管道<br>
-h                          被测文件是符号连接<br>
-L                          被测文件是符号连接<br>
-S(大写)                    被测文件是一个socket<br>
-t                          关联到一个终端设备的文件描述符。用来检测脚本的stdin[-t0]或[-t1]是一个终端<br>
-r                          文件具有读权限，针对运行脚本的用户<br>
-w                          文件具有写权限，针对运行脚本的用户<br>
-x                          文件具有执行权限，针对运行脚本的用户<br>
-u                          set-user-id(suid)标志到文件，即普通用户可以使用的root权限文件，通过chmod +s file实现<br>
-k                          设置粘贴位<br>
-O                          运行脚本的用户是文件的所有者<br>
-G                          文件的group-id和运行脚本的用户相同<br>
-N                          从文件最后被阅读到现在，是否被修改</p>
<p>f1 -nt f2                   文件f1是否比f2新<br>
f1 -ot f2                   文件f1是否比f2旧<br>
f1 -ef f2                   文件f1和f2是否硬连接到同一个文件</p>
<p>二元比较操作符，比较变量或比较数字</p>
<p>整数比较：<br>
-eq                       等于            if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>−</mo><mi>e</mi><mi>q</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; -eq &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord">&quot;</span></span></span></span>b&quot; ]<br>
-ne                       不等于          if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>−</mo><mi>n</mi><mi>e</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; -ne &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord">&quot;</span></span></span></span>b&quot; ]<br>
-gt                       大于            if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>−</mo><mi>g</mi><mi>t</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; -gt &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">t</span><span class="mord">&quot;</span></span></span></span>b&quot; ]<br>
-ge                       大于等于        if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>−</mo><mi>g</mi><mi>e</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; -ge &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">e</span><span class="mord">&quot;</span></span></span></span>b&quot; ]<br>
-lt                       小于            if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>−</mo><mi>l</mi><mi>t</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; -lt &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">t</span><span class="mord">&quot;</span></span></span></span>b&quot; ]<br>
-le                       小于等于        if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>−</mo><mi>l</mi><mi>e</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; -le &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord">&quot;</span></span></span></span>b&quot; ]</p>
<p>&lt;                         小于（需要双括号）           (( &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>&lt;</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; &lt; &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>b&quot; ))<br>
&lt;=                        小于等于(...)                (( &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>&lt;</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; &lt;= &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>b&quot; ))</p>
<blockquote>
<p>大于(...)                    (( &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>&gt;</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; &gt; &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>b&quot; ))<br>
=                        大于等于(...)                (( &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>&gt;</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; &gt;= &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>b&quot; ))</p>
</blockquote>
<p>字符串比较：<br>
=                         等于           if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; = &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>b&quot; ]<br>
==                        与=等价<br>
!=                        不等于         if [ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; = &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>b&quot; ]<br>
&lt;                         小于，在ASCII字母中的顺序：<br>
                          if [[ &quot;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">&quot;</mi><mo>&lt;</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">a&quot; &lt; &quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&quot;</span></span></span></span>b&quot; ]]<br>
                          if [ &quot;<span class='katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \&lt; at position 4: a&quot; \̲&lt;̲ &quot;'>a&quot; \&lt; &quot;</span>b&quot; ]         #需要对&lt;进行转义</p>
<blockquote>
<p>大于</p>
</blockquote>
<p>-z                        字符串为null，即长度为0<br>
-n                        字符串不为null，即长度不为0<br>
————————————————<br>
版权声明：本文为CSDN博主「知耻而后勇的蜗牛」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>
原文链接：https://blog.csdn.net/yf210yf/article/details/9207147</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[findora公链部署]]></title>
        <id>https://chriswsq.github.io/post/findora-gong-lian-bu-shu/</id>
        <link href="https://chriswsq.github.io/post/findora-gong-lian-bu-shu/">
        </link>
        <updated>2021-02-22T09:27:18.000Z</updated>
        <content type="html"><![CDATA[<p>docker方式部署</p>
<p><strong>首先运行</strong></p>
<pre><code class="language-bash">docker run -it --rm -v &quot;/bsn/findora/data/tendermint:/tendermint&quot; tendermint/tendermint:v0.33.1 testnet --v 1 --o mainnet
</code></pre>
<p><strong>docker-compsoe文件</strong></p>
<pre><code class="language-yml">version: '3'
services:
  node:
    container_name: findora_node
    image: &quot;public.ecr.aws/k6m5b6e2/demo/tendermint:v0.1.0&quot;
    command:
      [
        'node',
        '--proxy_app=tcp://abci:26658',
        '--rpc.laddr=tcp://0.0.0.0:26657'
      ]

    ports:
      - &quot;26656-26657:26656-26657&quot;
    volumes:
      - /bsn/findora/data/tendermint/mainnet/node0:/root/.tendermint
    depends_on:
      - abci
    restart: always

  
  abci:
    container_name: findora_abci
    image: &quot;public.ecr.aws/k6m5b6e2/demo/abci_validator_node:v0.1.0&quot;

    environment:
      - LEDGER_DIR=/var/ledger
      - RUST_LOG=info,tokio_reactor=warn
      - TENDERMINT_HOST=findora_node
      - ABCI_HOST=0.0.0.0
      - SERVER_HOST=0.0.0.0
      - LEDGER_HOST=0.0.0.0
      - RUST_LOG=info
    ports:
      - &quot;8668:8668&quot;
      - &quot;8669:8669&quot;
      - &quot;26658:26658&quot;
    volumes:
      - /bsn/findora/data/ledger:/var/ledger

    restart: always


  query_server:
    container_name: findora_query_server
    image: &quot;public.ecr.aws/k6m5b6e2/demo/query_server:v0.1.0&quot;

    environment:
      - LEDGER_HOST=findora_abci
      - LEDGER_PORT=8668
      - LEDGER_PROTOCOL=http
      - QUERY_PORT=8667
      - QUERY_SERVER_HOST=0.0.0.0
      - RUST_LOG=info,tokio_reactor=warn
    ports:
      - &quot;8667:8667&quot;
    depends_on:
      - abci
    restart: always
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Casper测试网部署]]></title>
        <id>https://chriswsq.github.io/post/casperlabs-ce-shi-wang-bu-shu/</id>
        <link href="https://chriswsq.github.io/post/casperlabs-ce-shi-wang-bu-shu/">
        </link>
        <updated>2021-02-04T08:12:31.000Z</updated>
        <content type="html"><![CDATA[<p>主网还未发布<br>
目前只有部署测试网<br>
主网预计2021年第二季度上线</p>
<p><strong>版本：0.7.6</strong></p>
<h2 id="手动部署">手动部署</h2>
<pre><code class="language-bash">
# Clean up old genesis file location
sudo rm /etc/casper/config.*
sudo rm /etc/casper/accounts.csv 
sudo rm /etc/casper/chainspec.toml 
sudo rm /etc/casper/validation.md5

# Install new software
curl -JLO https://bintray.com/casperlabs/debian/download_file?file_path=casper-node-launcher_0.2.0-0_amd64.deb
curl -JLO https://bintray.com/casperlabs/debian/download_file?file_path=casper-client_0.7.6-0_amd64.deb
sudo apt install -y ./casper-client_0.7.6-0_amd64.deb ./casper-node-launcher_0.2.0-0_amd64.deb

cd /etc/casper
sudo -u casper ./pull_casper_node_version.sh 1_0_0 release-test

# Get trusted_hash into config.toml
curl -s 54.183.27.75:8888/status | jq -r .last_added_block_info.hash

# Or do this automatically
sudo sed -i &quot;/trusted_hash =/c\trusted_hash = '$(curl -s 54.183.27.75:8888/status | jq -r .last_added_block_info.hash | tr -d '\n')'&quot; /etc/casper/1_0_0/config.toml

sudo logrotate -f /etc/logrotate.d/casper-node
sudo /etc/casper/delete_local_db.sh; sleep 1
sudo systemctl start casper-node-launcher
systemctl status casper-node-launcher
</code></pre>
<h2 id="docker部署">docker部署</h2>
<p>目前casperlabs只支持ubuntu系统，这里采用docker方式部署</p>
<p><strong>Dockerfile</strong></p>
<pre><code class="language-dockerfile">from ubuntu:18.04

RUN apt-get update \
  &amp;&amp;  apt-get install -y --reinstall systemd \
  &amp;&amp;  apt-get install -y curl  \
  &amp;&amp;  apt-get install -y jq  \
  &amp;&amp;  curl -JLO https://bintray.com/casperlabs/debian/download_file?file_path=casper-node-launcher_0.2.0-0_amd64.deb  \
  &amp;&amp;  curl -JLO https://bintray.com/casperlabs/debian/download_file?file_path=casper-client_0.7.6-0_amd64.deb  \
  &amp;&amp;  apt install -y ./casper-client_0.7.6-0_amd64.deb ./casper-node-launcher_0.2.0-0_amd64.deb  \
  &amp;&amp;  cd /etc/casper \
  &amp;&amp;  ./pull_casper_node_version.sh 1_0_0 release-test \
  &amp;&amp;  curl -s 54.183.27.75:8888/status | jq -r .last_added_block_info.hash \
  &amp;&amp;  sed -i &quot;/trusted_hash =/c\trusted_hash = '$(curl -s 54.183.27.75:8888/status | jq -r .last_added_block_info.hash | tr -d '\n')'&quot; /etc/casper/1_0_0/config.toml \
  &amp;&amp;  apt install -y logrotate \
  &amp;&amp;  logrotate -f /etc/logrotate.d/casper-node \
  &amp;&amp;  /etc/casper/delete_local_db.sh; sleep 1
ENV   CASPER_ENABLE_LEGACY_NET  TRUE
EXPOSE  7777  8888  9999
ENTRYPOINT [&quot;/bin/sh&quot;,&quot;-c&quot;,&quot;exec /usr/bin/casper-node-launcher 1&gt;&gt; /var/log/casper/casper-node.log 2&gt;&gt; /var/log/casper/casper-node.stderr.log&quot;]
</code></pre>
<p>需预先创建keys文件<br>
手动运行一遍服务，将相关文件挂载出来<br>
<strong>docker-compose文件</strong></p>
<pre><code class="language-docker-compose.yml">version: '3'
 
services:

   casper:
     image: casper:0.7.6
     container_name: casper-testnet
     ports:
       - 7777:7777 
       - 8888:8888
       - 9999:9999
       - 35000:35000
     volumes:
       - /bsn/casper/validator_keys:/etc/casper/validator_keys/
       - /bsn/casper/1_0_0:/etc/casper/1_0_0
       - /bsn/casper/data:/var/lib/casper/casper-node
     restart: always
</code></pre>
<h2 id="其他命令">其他命令</h2>
<p><strong>获取节点信息</strong></p>
<pre><code class="language-bash">[root@casper]# curl http://localhost:8888/status |jq
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   849  100   849    0     0   137k      0 --:--:-- --:--:-- --:--:--  165k
{
  &quot;api_version&quot;: &quot;1.0.0&quot;,
  &quot;chainspec_name&quot;: &quot;release-test-16&quot;,
  &quot;genesis_root_hash&quot;: &quot;1a6f..9fa2&quot;,
  &quot;peers&quot;: [
    {
      &quot;node_id&quot;: &quot;NodeId::P2p(Exc3..we6T)&quot;,
      &quot;address&quot;: &quot;/ip4/54.209.219.135/tcp/35000&quot;
    },
    {
      &quot;node_id&quot;: &quot;NodeId::P2p(G2Xq..4nuP)&quot;,
      &quot;address&quot;: &quot;/ip4/3.101.67.146/tcp/35000&quot;
    },
    {
      &quot;node_id&quot;: &quot;NodeId::P2p(JJV2..uD5e)&quot;,
      &quot;address&quot;: &quot;/ip4/54.183.27.75/tcp/35000&quot;
    },
    {
      &quot;node_id&quot;: &quot;NodeId::P2p(JJey..ygLw)&quot;,
      &quot;address&quot;: &quot;/ip4/62.171.172.72/tcp/35000&quot;
    },
    {
      &quot;node_id&quot;: &quot;NodeId::P2p(SmNF..W5gS)&quot;,
      &quot;address&quot;: &quot;/ip4/3.133.139.143/tcp/35000&quot;
    }
  ],
  &quot;last_added_block_info&quot;: {
    &quot;hash&quot;: &quot;46efcb832547bcba03f39529b8d752b562b05ac8127571f268495aefd574ac08&quot;,
    &quot;timestamp&quot;: &quot;2021-02-07T09:29:21.664Z&quot;,
    &quot;era_id&quot;: 293,
    &quot;height&quot;: 8220,
    &quot;state_root_hash&quot;: &quot;1a891bb13571c14fe6d477128022ca130014e92ed3962a123a9ea5912f3b4e36&quot;,
    &quot;creator&quot;: &quot;018b15761be0c527117c79b87ca013b014a4628f01e382902a139529406723d86b&quot;
  },
  &quot;build_version&quot;: &quot;0.7.3&quot;
}
</code></pre>
<p>8000的快高同步了两个小时左右，同步过程中7777端口不能使用。</p>
<p><strong>获取所有rpc节点</strong></p>
<pre><code class="language-bash">curl -X POST -H 'Content-Type: application/json' -d '{&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;method&quot;:&quot;rpc.discover&quot;}' 'http://127.0.0.1:7777/rpc' | jq
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[跨连]]></title>
        <id>https://chriswsq.github.io/post/kua-lian/</id>
        <link href="https://chriswsq.github.io/post/kua-lian/">
        </link>
        <updated>2021-02-02T06:01:50.000Z</updated>
        <content type="html"><![CDATA[<p>cjq   调用   relayer 服务<br>
cjq   负责人  lyk<br>
relayer 负责人  yz</p>
<p>目前一般报错</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[rabbitmq基本知识]]></title>
        <id>https://chriswsq.github.io/post/rabbitmq-ji-ben-zhi-shi/</id>
        <link href="https://chriswsq.github.io/post/rabbitmq-ji-ben-zhi-shi/">
        </link>
        <updated>2021-01-12T07:04:38.000Z</updated>
        <content type="html"><![CDATA[<h2 id="功能介绍">功能介绍</h2>
<p>一般情况下，我们会使用 rabbitmq_management 插件，通过 Web UI 的方式来监控和操作 RabbitMQ（端口 15672），但有时候命令的方式会更加方便一些，RabbitMQ 提供了 CLI 管理工具 rabbitmqadmin ，其实就是基于 RabbitMQ 的 HTTP API，用 Python 写的一个脚本。</p>
<p><strong>rabbitmqadmin 提供了下面功能：</strong></p>
<ul>
<li>列出 exchanges, queues, bindings, vhosts, users, permissions, connections<br>
and channels。</li>
<li>创建和删除 exchanges, queues, bindings, vhosts, users and permissions。</li>
<li>发布和获取消息，以及消息详情。</li>
<li>关闭连接和清空队列。</li>
<li>导入导出配置。</li>
</ul>
<p>使用 rabbitmqadmin 的时候，我们需要理解 RabbitMQ 的基本概念，先回顾一下：</p>
<h2 id="rabbitmq-概念">RabbitMQ 概念：</h2>
<table>
<thead>
<tr>
<th>概念</th>
<th>详解</th>
</tr>
</thead>
<tbody>
<tr>
<td>Exchange</td>
<td>消息交换机，它指定消息按什么规则，路由到哪个队列</td>
</tr>
<tr>
<td>Queue</td>
<td>消息队列，每个消息都会被投入到一个或多个队列</td>
</tr>
<tr>
<td>Binding</td>
<td>绑定，它的作用就是把 exchange 和 queue 按照路由规则绑定起来</td>
</tr>
<tr>
<td>Routing Key</td>
<td>路由关键字，exchange 根据这个关键字进行消息投递</td>
</tr>
<tr>
<td>Vhost</td>
<td>虚拟主机，可以开设多个 vhost，用作不同用户的权限分离</td>
</tr>
<tr>
<td>Producer</td>
<td>消息生产者，就是投递消息的程序</td>
</tr>
<tr>
<td>Consumer</td>
<td>消息消费者，就是接受消息的程序</td>
</tr>
<tr>
<td>Channel</td>
<td>消息通道，在客户端的每个连接里，可建立多个 channel，每个 channel 代表一个会话任务</td>
</tr>
</tbody>
</table>
<h2 id="rabbitmq-投递过程">RabbitMQ 投递过程：</h2>
<ol>
<li>客户端连接到消息队列服务器，打开一个 channel。</li>
<li>客户端声明一个 exchange，并设置相关属性。</li>
<li>客户端声明一个 queue，并设置相关属性。</li>
<li>客户端使用 routing key，在 exchange 和 queue 之间建立好绑定关系。</li>
<li>客户端投递消息到 exchange。</li>
<li>客户端从指定的 queue 中消费信息。</li>
</ol>
<h2 id="基本命令">基本命令</h2>
<p>创建一个test队列：</p>
<pre><code class="language-bash">[root@node1 ~]# rabbitmqadmin declare queue name=test durable=true
queue declared
[root@node1 ~]# rabbitmqadmin list queues
+------+----------+
| name | messages |
+------+----------+
| test | 0        |
+------+----------+
</code></pre>
<p>需要注意：durable=true表示持久化，如果没有创建 Exchange，RabbitMQ 会使用默认的 Exchange，以及创建一个 Binding，这也就是为什么下面发布消息，可以成功的原因。</p>
<p>发布一条消息：</p>
<pre><code class="language-bash">[root@node1 ~]# rabbitmqadmin publish routing_key=test payload=&quot;hello world&quot;
Message published
[root@node1 ~]# rabbitmqadmin list queues
+------+----------+
| name | messages |
+------+----------+
| test | 1        |
+------+----------+
</code></pre>
<p>消费一条消息（查看消息内容）：</p>
<pre><code class="language-bash">[root@node1 ~]# rabbitmqadmin get queue=test requeue=true
+-------------+----------+---------------+-------------+---------------+------------------+------------+-------------+
| routing_key | exchange | message_count |   payload   | payload_bytes | payload_encoding | properties | redelivered |
+-------------+----------+---------------+-------------+---------------+------------------+------------+-------------+
| test        |          | 0             | hello world | 11            | string           |            | False       |
+-------------+----------+---------------+-------------+---------------+------------------+------------+-------------+
[root@node1 ~]# rabbitmqadmin list queues
+------+----------+
| name | messages |
+------+----------+
| test | 1        |
+------+----------+
[root@node1 ~]# rabbitmqadmin get queue=test requeue=false
+-------------+----------+---------------+-------------+---------------+------------------+------------+-------------+
| routing_key | exchange | message_count |   payload   | payload_bytes | payload_encoding | properties | redelivered |
+-------------+----------+---------------+-------------+---------------+------------------+------------+-------------+
| test        |          | 0             | hello world | 11            | string           |            | True        |
+-------------+----------+---------------+-------------+---------------+------------------+------------+-------------+
[root@node1 ~]# rabbitmqadmin list queues
+------+----------+
| name | messages |
+------+----------+
| test | 0        |
+------+----------+
</code></pre>
<p>需要注意：requeue=true表示查看队列，不消费；requeue=false表示查看队列，进行消费。</p>
<p>我们查看下上面创建队列后，默认创建的 Binding：</p>
<pre><code class="language-bash">[root@node1 ~]# rabbitmqadmin list bindings
+--------+-------------+-------------+
| source | destination | routing_key |
+--------+-------------+-------------+
|        | test        | test        |
+--------+-------------+-------------+
</code></pre>
<p>可以看到，使用的默认 Exchange 是空字符串（系统中的第一个 Exchange，Binding 中的 source 部分），并且这个默认的 Exchange 是direct类型（也就是一对一模式），这种隐式调用确保了消息准确投递。</p>
<p>另外，再说一下 Binding 中的三个概念：</p>
<ul>
<li>Source：源头的意思，其实就是 Exchange。</li>
<li>destination：目的地的意思，其实就是 Queue。</li>
<li>routing_key：路由键的规则，用于 Queue 匹配（比如test.#）。<br>
那下面我们就手动创建一下 Exchange：</li>
</ul>
<pre><code class="language-bash">[root@node1 ~]# rabbitmqadmin declare exchange name=my.topic type=topic
exchange declared
[root@node1 ~]# rabbitmqadmin list exchanges
+--------------------+---------+
|        name        |  type   |
+--------------------+---------+
|                    | direct  |
| amq.direct         | direct  |
| amq.fanout         | fanout  |
| amq.headers        | headers |
| amq.match          | headers |
| amq.rabbitmq.log   | topic   |
| amq.rabbitmq.trace | topic   |
| amq.topic          | topic   |
| my.topic           | topic   |
+--------------------+---------+
</code></pre>
<p>需要注意：这边我们只创建了一个 Exchange，类型为 Topic，和之前创建的test队列，目前没有任何关系。</p>
<p>然后再创建一个 Binding：</p>
<pre><code class="language-bash">[root@node1 ~]# rabbitmqadmin declare binding source=my.topic destination=test routing_key=my.#
binding declared
[root@node1 ~]# rabbitmqadmin list bindings
+----------+-------------+-------------+
|  source  | destination | routing_key |
+----------+-------------+-------------+
|          | test        | test        |
| my.topic | test        | my.#        |
+----------+-------------+-------------+
</code></pre>
<p>需要注意：我们上面创建的 Binding（最后那个），就是将名称为my.topic的 Exchange 和名称为test的 Queue 关联起来，并且设置的routing_key规则为my.#。</p>
<p>下面我们发布两条消息：</p>
<pre><code class="language-bash">[root@node1 ~]# rabbitmqadmin publish routing_key=my.test exchange=my.topic  payload=&quot;hello world by my.test&quot;
Message published
[root@node1 ~]# rabbitmqadmin publish routing_key=my.test.test exchange=my.topic  payload=&quot;hello world by my.test.test&quot;
Message published
[root@node1 ~]# rabbitmqadmin list queues
+------+----------+
| name | messages |
+------+----------+
| test | 2        |
+------+----------+
</code></pre>
<p>需要注意，发布的两条消息都指定了my.topic的 Exchange，但消息的routing_key不同，但都成功发布到test队列了，原因是my.test和my.test.test都符合my.#路由规则。</p>
<p>下面，我们对两条消息进行消费：</p>
<pre><code class="language-bash">[root@node1 ~]# rabbitmqadmin get queue=test requeue=false
+-------------+----------+---------------+------------------------+---------------+------------------+------------+-------------+
| routing_key | exchange | message_count |        payload         | payload_bytes | payload_encoding | properties | redelivered |
+-------------+----------+---------------+------------------------+---------------+------------------+------------+-------------+
| my.test     | my.topic | 1             | hello world by my.test | 22            | string           |            | False       |
+-------------+----------+---------------+------------------------+---------------+------------------+------------+-------------+
[root@node1 ~]# rabbitmqadmin get queue=test requeue=false
+--------------+----------+---------------+-----------------------------+---------------+------------------+------------+-------------+
| routing_key  | exchange | message_count |           payload           | payload_bytes | payload_encoding | properties | redelivered |
+--------------+----------+---------------+-----------------------------+---------------+------------------+------------+-------------+
| my.test.test | my.topic | 0             | hello world by my.test.test | 27            | string           |            | False       |
+--------------+----------+---------------+-----------------------------+---------------+------------------+------------+-------------+
[root@node1 ~]# rabbitmqadmin list queues
+------+----------+
| name | messages |
+------+----------+
| test | 0        |
+------+----------+
</code></pre>
<p>rabbitmqadmin 测试到这边，你应该就体会到了 RabbitMQ 的投递过程了吧，我们再对之前的投递过程完善下：</p>
<ol>
<li>声明一个 Queue，和谁都没有关系（只有名称和持久化配置）。</li>
<li>声明一个 Exchange，和谁都没有关系（只有名称和 Exchange Type 配置）。</li>
<li>声明一个 Binding，通过 source 和 destination，将 Queue 和 Exchange 关联起来，并通过 routing_key，设置发布消息的路由规则。</li>
<li>发布一个消息，需要指定一个 Exchange，以及本身的路由名称。</li>
<li>消费队列中的消息，需要指定一个 Queue。</li>
</ol>
<p>rabbitmqadmin 命令汇总：</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>rabbitmqadmin list users</td>
<td>查看所有用户 User</td>
</tr>
<tr>
<td>rabbitmqadmin list users name</td>
<td>查看所有用户名 Username</td>
</tr>
<tr>
<td>rabbitmqadmin list users tags</td>
<td>查看所有用户角色</td>
</tr>
<tr>
<td>rabbitmqadmin list vhosts</td>
<td>查看所有虚拟主机</td>
</tr>
<tr>
<td>rabbitmqadmin list connections</td>
<td>查看所有连接</td>
</tr>
<tr>
<td>rabbitmqadmin list exchanges</td>
<td>查看所有路由 Exchange</td>
</tr>
<tr>
<td>rabbitmqadmin list bindings</td>
<td>查看所有路由与队列的关系绑定 Binding</td>
</tr>
<tr>
<td>rabbitmqadmin list permissions</td>
<td>查看所有角色的权限 Permission</td>
</tr>
<tr>
<td>rabbitmqadmin list channels</td>
<td>查看所有通道 Channel</td>
</tr>
<tr>
<td>rabbitmqadmin list consumers</td>
<td>查看所有消费者 Consumer</td>
</tr>
<tr>
<td>rabbitmqadmin list queues</td>
<td>查看所有消息队列 Queue</td>
</tr>
<tr>
<td>rabbitmqadmin list nodes</td>
<td>查看所有节点 Node</td>
</tr>
<tr>
<td>rabbitmqadmin show overview</td>
<td>概览 Overview</td>
</tr>
<tr>
<td>rabbitmqadmin list bindings source destination_type destination properties_key</td>
<td>查看所有路由与队列的关系绑定的详细信息 Binding</td>
</tr>
<tr>
<td>rabbitmqadmin declare queue name=test durable=true</td>
<td>定义一个队列queue，durable=true代表持久化打开。</td>
</tr>
<tr>
<td>rabbitmqadmin declare exchange name=my.fanout type=fanout</td>
<td>定义一个Fanout路由</td>
</tr>
<tr>
<td>rabbitmqadmin declare exchange name=my.direct type=direct</td>
<td>定义一个Direct路由</td>
</tr>
<tr>
<td>rabbitmqadmin declare exchange name=my.topic type=topic</td>
<td>定义一个Topic路由</td>
</tr>
<tr>
<td>rabbitmqadmin declare binding source=my.fanout destination=test routing_key=first</td>
<td>定义 binding</td>
</tr>
<tr>
<td>rabbitmqadmin publish routing_key=test payload=&quot;hello world&quot;</td>
<td>发布一条消息</td>
</tr>
<tr>
<td>rabbitmqadmin publish routing_key=my.test exchange=my.topic payload=&quot;hello world&quot;</td>
<td>使用路由转发消息</td>
</tr>
<tr>
<td>rabbitmqadmin get queue=test requeue=true</td>
<td>查看消息，不消费</td>
</tr>
<tr>
<td>rabbitmqadmin get queue=test requeue=false</td>
<td>查看消息，并消费</td>
</tr>
<tr>
<td>rabbitmqadmin purge queue name=test</td>
<td>删除队列中的所有消息</td>
</tr>
<tr>
<td>rabbitmqadmin delete queue name=hello</td>
<td>删除消息队列 Queue</td>
</tr>
<tr>
<td>rabbitmqadmin delete user name=test</td>
<td>删除用户 User</td>
</tr>
<tr>
<td>rabbitmqadmin delete exchange name=test</td>
<td>删除路由器 Exchange</td>
</tr>
<tr>
<td>rabbitmqadmin delete binding source='kk' destination_type=queue destination=test properties_key=test</td>
<td>删除路由器与消息队列的关系绑定 Binding</td>
</tr>
<tr>
<td>rabbitmqadmin -f raw_json list users	raw_json</td>
<td>格式化输出</td>
</tr>
<tr>
<td>rabbitmqadmin -f long list users</td>
<td>格式化输出</td>
</tr>
<tr>
<td>rabbitmqadmin -f pretty_json list users	pretty_json</td>
<td>格式化输出</td>
</tr>
<tr>
<td>rabbitmqadmin -f kvp list users</td>
<td>格式化输出</td>
</tr>
<tr>
<td>rabbitmqadmin -f tsv list users</td>
<td>格式化输出</td>
</tr>
<tr>
<td>rabbitmqadmin -f table list users</td>
<td>table 格式化输出</td>
</tr>
<tr>
<td>rabbitmqadmin -f bash list users</td>
<td>bash 格式化输出</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[部署 redis，ipfs ，ipfs-gate，mongodb， rabbitmq]]></title>
        <id>https://chriswsq.github.io/post/bu-shu-redisipfs-ipfs-gatemongodb-rabbitmq/</id>
        <link href="https://chriswsq.github.io/post/bu-shu-redisipfs-ipfs-gatemongodb-rabbitmq/">
        </link>
        <updated>2021-01-11T08:07:48.000Z</updated>
        <content type="html"><![CDATA[<p>登录ansible 节点 192.168.1.176</p>
<p>/application/ansible-playbook/optimization/{java redis mongodb rabbitmq ipfs}</p>
<p>在 /etc/ansible/inventory/   目录下添加 ipfs 的 hosts 文件<br>
执行</p>
<pre><code class="language-bash">#安装java
cd  /application/ansible-playbook/optimization/java
ansible-playbook -e host=ipfs install-java.yaml

#安装redis
cd /application/ansible-playbook/optimization/redis
ansible-playbook -e host=ipfs  docker-compose-redis.yaml

#安装ipfs
cd /application/ansible-playbook/optimization/ipfs
ansible-playbook -e host=ipfs  docker-compose-redis.yaml 
#登录ipfs服务器修改conf文件

核心属性
&quot;GCPeriod&quot;: &quot;2h&quot;,
    &quot;StorageGCWatermark&quot;: 100,
&quot;StorageMax&quot;: &quot;1GB&quot;


#安装mongodb
cd  /application/ansible-playbook/optimization/mongodb
ansible-playbook -e host=ipfs  install-mongodb.yaml

# 安装ipfs-gate
ipfs-gate由开发部署或者提供相关部署文档
登录阿里云控制台添加ipfs-gate域名A记录（域名由开发提供）
</code></pre>
<p>找提供商开启服务器业务响应端口</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[mongodb基础知识与部署]]></title>
        <id>https://chriswsq.github.io/post/mongodb-ji-chu-zhi-shi-yu-bu-shu/</id>
        <link href="https://chriswsq.github.io/post/mongodb-ji-chu-zhi-shi-yu-bu-shu/">
        </link>
        <updated>2021-01-11T06:55:47.000Z</updated>
        <content type="html"><![CDATA[<p>我们在安装完mongodb之后，默认是没有开启权限认证的， 但是我们在生产环境权限认证是必不可少的</p>
<h1 id="命令行部署">命令行部署</h1>
<h2 id="1-创建用户">1. 创建用户</h2>
<p>启动mongo shell<br>
我们先创建个管理员账号（该账号可以对所有数据库进行用户管理）</p>
<pre><code class="language-bash">root@2613c68bd252:/# mongo     #进入命令行
MongoDB shell version v4.2.6
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&amp;gssapiServiceName=mongodb
Implicit session: session { &quot;id&quot; : UUID(&quot;4b9dd82a-5098-41f1-a265-45bcff0ad0e3&quot;) }
MongoDB server version: 4.2.6
&gt; use admin
switched to db admin
&gt; db.createUser(
... {
...   user: &quot;admin&quot;,
...   pwd: &quot;123456&quot;,
...   roles: [ { role: &quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot;} ]
... }
... )
Successfully added user: {
        &quot;user&quot; : &quot;admin&quot;,
        &quot;roles&quot; : [
                {
                        &quot;role&quot; : &quot;userAdminAnyDatabase&quot;,
                        &quot;db&quot; : &quot;admin&quot;
                }
        ]
}
</code></pre>
<h2 id="2-开启权限认证">2. 开启权限认证</h2>
<p>修改conf文件</p>
<pre><code class="language-conf">maxConns = 1000000
fork = false
port = 27017
pidfilepath = /var/run/mongodb_27017.pid
dbpath = /var/lib/mongodb/
logpath = /var/log/mongodb/mongodb.log
logappend = true
bind_ip  = 0.0.0.0
auth = true                         #启动认证模块
journal = true
</code></pre>
<p>重新启动即可</p>
<h1 id="docker部署">docker部署</h1>
<h2 id="docker-compose">docker-compose</h2>
<pre><code class="language-yml">version: '2'
services:
  mongodb:
    image: mongo
    ports:
        - 27017:27017
    volumes:
        - &quot;./data/configdb:/data/configdb&quot;
        - &quot;./data/db:/data/db&quot;
    command: mongod --auth
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root       #初始化管理员用户名和密码
      - MONGO_INITDB_ROOT_PASSWORD=123456
    tty: true
</code></pre>
<h2 id="带上mongo-expressweb管理页面">带上mongo-express，web管理页面。</h2>
<pre><code class="language-yml"># Use root/example as user/password credentials
version: '3.1'

services:

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    # command: [&quot;--bind_ip_all&quot;]
    ports:
      - &quot;27017:27017&quot;

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
</code></pre>
<p>运行docker ps查看容器是否运行。</p>
<p>进入docker容器并进入mongo命令行。</p>
<pre><code class="language-bash">docker exec -it  test bash
mongo
</code></pre>
<p>此时show dbs无法执行，需要认证。<br>
切换到admin并创建root用户：</p>
<pre><code class="language-bash">use admin
db.createUser({ user: 'admin', pwd: 'admin', roles: [ { role: &quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot; } ] })
</code></pre>
<h2 id="3-创建其他的账号">3. 创建其他的账号</h2>
<pre><code class="language-bash">&gt; use admin
switched to db admin
&gt; db.auth(&quot;admin&quot;, &quot;admin&quot;)
1
&gt; db.createUser(
... {
...  user : &quot;my_tester&quot;,
...  pwd : &quot;123456&quot;,
...  roles: [ { role : &quot;readWrite&quot;, db : &quot;test&quot; }  ]
... }
... )
Successfully added user: {
        &quot;user&quot; : &quot;my_tester&quot;,
        &quot;roles&quot; : [
                {
                        &quot;role&quot; : &quot;readWrite&quot;,
                        &quot;db&quot; : &quot;test&quot;
                }
        ]
}
</code></pre>
<h2 id="权限说明基于角色的权限控制">权限说明（基于角色的权限控制）</h2>
<h3 id="数据库用户角色">数据库用户角色</h3>
<p>read: 只读数据权限<br>
readWrite:学些数据权限<br>
<strong>数据库管理角色</strong></p>
<ul>
<li>dbAdmin: 在当前db中执行管理操作的权限</li>
<li>dbOwner: 在当前db中执行任意操作</li>
<li>userADmin: 在当前db中管理user的权限<br>
<strong>备份和还原角色</strong></li>
<li>backup</li>
<li>restore<br>
<strong>夸库角色</strong></li>
<li>readAnyDatabase: 在所有数据库上都有读取数据的权限</li>
<li>readWriteAnyDatabase: 在所有数据库上都有读写数据的权限</li>
<li>userAdminAnyDatabase: 在所有数据库上都有管理user的权限</li>
<li>dbAdminAnyDatabase: 管理所有数据库的权限<br>
<strong>集群管理</strong></li>
<li>clusterAdmin: 管理机器的最高权限</li>
<li>clusterManager: 管理和监控集群的权限</li>
<li>clusterMonitor: 监控集群的权限</li>
<li>hostManager: 管理Server<br>
<strong>超级权限</strong></li>
<li>root: 超级用户</li>
</ul>
<h3 id="52-自定义角色">5.2 自定义角色</h3>
<p>内置角色只能控制User在DB级别上执行的操作，管理员可以创建自定义角色，控制用户在集合级别（Collection-Level）上执行的操作，即，控制User在当前DB的特定集合上执行特定的操作</p>
<h2 id="基本命令">基本命令</h2>
<p><strong>查看创建的用户</strong></p>
<pre><code class="language-bash">show users 或 db.system.users.find() 或 db.runCommand({usersInfo:&quot;userName&quot;})
</code></pre>
<p><strong>修改密码</strong></p>
<pre><code class="language-bash">use admin
db.changeUserPassword(&quot;username&quot;, &quot;xxx&quot;)
</code></pre>
<p><strong>修改密码和用户信息</strong></p>
<pre><code class="language-bash">db.runCommand(
    {
        updateUser:&quot;username&quot;,
        pwd:&quot;xxx&quot;,
        customData:{title:&quot;xxx&quot;}
    }
)
</code></pre>
<p><strong>删除数据库用户</strong></p>
<pre><code class="language-bash">use admin
db.dropUser('user001')
</code></pre>
<p><strong>创建其他数据管理员</strong></p>
<pre><code class="language-bash">// 登录管理员用户
use admin
db.auth('admin','admin')
// 切换至db001数据库
use db001
// ... 増查改删该数据库专有用户
</code></pre>
<h2 id="重要的一步">重要的一步</h2>
<p>启用权限验证(别TM的武装了大半天，大门还一直开着，还抱怨我方防御塔怎么一直被摧毁)</p>
<pre><code class="language-bash">mongo --auth
</code></pre>
<p>或者修改mongo.conf，最后一行添加</p>
<pre><code class="language-bash">#启用权限访问
auth=true
</code></pre>
<p>参考自：https://www.jianshu.com/p/62736bff7e2e</p>
]]></content>
    </entry>
</feed>